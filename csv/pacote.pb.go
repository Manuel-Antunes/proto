// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: pacote.proto

package csv

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ContraCheque_CSV_Tipo int32

const (
	ContraCheque_CSV_MEMBRO   ContraCheque_CSV_Tipo = 0
	ContraCheque_CSV_SERVIDOR ContraCheque_CSV_Tipo = 1
)

// Enum value maps for ContraCheque_CSV_Tipo.
var (
	ContraCheque_CSV_Tipo_name = map[int32]string{
		0: "MEMBRO",
		1: "SERVIDOR",
	}
	ContraCheque_CSV_Tipo_value = map[string]int32{
		"MEMBRO":   0,
		"SERVIDOR": 1,
	}
)

func (x ContraCheque_CSV_Tipo) Enum() *ContraCheque_CSV_Tipo {
	p := new(ContraCheque_CSV_Tipo)
	*p = x
	return p
}

func (x ContraCheque_CSV_Tipo) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContraCheque_CSV_Tipo) Descriptor() protoreflect.EnumDescriptor {
	return file_pacote_proto_enumTypes[0].Descriptor()
}

func (ContraCheque_CSV_Tipo) Type() protoreflect.EnumType {
	return &file_pacote_proto_enumTypes[0]
}

func (x ContraCheque_CSV_Tipo) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ContraCheque_CSV_Tipo.Descriptor instead.
func (ContraCheque_CSV_Tipo) EnumDescriptor() ([]byte, []int) {
	return file_pacote_proto_rawDescGZIP(), []int{3, 0}
}

type Remuneracao_CSV_Natureza int32

const (
	Remuneracao_CSV_R Remuneracao_CSV_Natureza = 0 //Receita
	Remuneracao_CSV_D Remuneracao_CSV_Natureza = 1 //Despesa
)

// Enum value maps for Remuneracao_CSV_Natureza.
var (
	Remuneracao_CSV_Natureza_name = map[int32]string{
		0: "R",
		1: "D",
	}
	Remuneracao_CSV_Natureza_value = map[string]int32{
		"R": 0,
		"D": 1,
	}
)

func (x Remuneracao_CSV_Natureza) Enum() *Remuneracao_CSV_Natureza {
	p := new(Remuneracao_CSV_Natureza)
	*p = x
	return p
}

func (x Remuneracao_CSV_Natureza) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Remuneracao_CSV_Natureza) Descriptor() protoreflect.EnumDescriptor {
	return file_pacote_proto_enumTypes[1].Descriptor()
}

func (Remuneracao_CSV_Natureza) Type() protoreflect.EnumType {
	return &file_pacote_proto_enumTypes[1]
}

func (x Remuneracao_CSV_Natureza) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Remuneracao_CSV_Natureza.Descriptor instead.
func (Remuneracao_CSV_Natureza) EnumDescriptor() ([]byte, []int) {
	return file_pacote_proto_rawDescGZIP(), []int{5, 0}
}

// Estrutura com informações pertencentes a execução da coleta dos dados.
type ResultadoColeta_CSV struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coleta       *Coleta_CSV           `protobuf:"bytes,1,opt,name=coleta,proto3" json:"coleta,omitempty"`
	Remuneracoes *Remuneracoes_CSV     `protobuf:"bytes,2,opt,name=remuneracoes,proto3" json:"remuneracoes,omitempty"`
	Folha        *FolhaDePagamento_CSV `protobuf:"bytes,3,opt,name=folha,proto3" json:"folha,omitempty"`
}

func (x *ResultadoColeta_CSV) Reset() {
	*x = ResultadoColeta_CSV{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pacote_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultadoColeta_CSV) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultadoColeta_CSV) ProtoMessage() {}

func (x *ResultadoColeta_CSV) ProtoReflect() protoreflect.Message {
	mi := &file_pacote_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultadoColeta_CSV.ProtoReflect.Descriptor instead.
func (*ResultadoColeta_CSV) Descriptor() ([]byte, []int) {
	return file_pacote_proto_rawDescGZIP(), []int{0}
}

func (x *ResultadoColeta_CSV) GetColeta() *Coleta_CSV {
	if x != nil {
		return x.Coleta
	}
	return nil
}

func (x *ResultadoColeta_CSV) GetRemuneracoes() *Remuneracoes_CSV {
	if x != nil {
		return x.Remuneracoes
	}
	return nil
}

func (x *ResultadoColeta_CSV) GetFolha() *FolhaDePagamento_CSV {
	if x != nil {
		return x.Folha
	}
	return nil
}

// Estrutura com informações pertencentes a coleta dos dados referentes a um órgão-mes-ano
type Coleta_CSV struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChaveColeta        string                 `protobuf:"bytes,1,opt,name=chave_coleta,json=chaveColeta,proto3" json:"chave_coleta,omitempty"`
	Orgao              string                 `protobuf:"bytes,2,opt,name=orgao,proto3" json:"orgao,omitempty"`
	Mes                int32                  `protobuf:"varint,3,opt,name=mes,proto3" json:"mes,omitempty"`
	Ano                int32                  `protobuf:"varint,4,opt,name=ano,proto3" json:"ano,omitempty"`
	TimestampColeta    *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=timestamp_coleta,json=timestampColeta,proto3" json:"timestamp_coleta,omitempty"`
	RepositorioColetor string                 `protobuf:"bytes,6,opt,name=repositorio_coletor,json=repositorioColetor,proto3" json:"repositorio_coletor,omitempty"`
	VersaoColetor      string                 `protobuf:"bytes,7,opt,name=versao_coletor,json=versaoColetor,proto3" json:"versao_coletor,omitempty"`
	DirColetor         string                 `protobuf:"bytes,8,opt,name=dir_coletor,json=dirColetor,proto3" json:"dir_coletor,omitempty"`
}

func (x *Coleta_CSV) Reset() {
	*x = Coleta_CSV{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pacote_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Coleta_CSV) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coleta_CSV) ProtoMessage() {}

func (x *Coleta_CSV) ProtoReflect() protoreflect.Message {
	mi := &file_pacote_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Coleta_CSV.ProtoReflect.Descriptor instead.
func (*Coleta_CSV) Descriptor() ([]byte, []int) {
	return file_pacote_proto_rawDescGZIP(), []int{1}
}

func (x *Coleta_CSV) GetChaveColeta() string {
	if x != nil {
		return x.ChaveColeta
	}
	return ""
}

func (x *Coleta_CSV) GetOrgao() string {
	if x != nil {
		return x.Orgao
	}
	return ""
}

func (x *Coleta_CSV) GetMes() int32 {
	if x != nil {
		return x.Mes
	}
	return 0
}

func (x *Coleta_CSV) GetAno() int32 {
	if x != nil {
		return x.Ano
	}
	return 0
}

func (x *Coleta_CSV) GetTimestampColeta() *timestamppb.Timestamp {
	if x != nil {
		return x.TimestampColeta
	}
	return nil
}

func (x *Coleta_CSV) GetRepositorioColetor() string {
	if x != nil {
		return x.RepositorioColetor
	}
	return ""
}

func (x *Coleta_CSV) GetVersaoColetor() string {
	if x != nil {
		return x.VersaoColetor
	}
	return ""
}

func (x *Coleta_CSV) GetDirColetor() string {
	if x != nil {
		return x.DirColetor
	}
	return ""
}

// Estrutura que faz referência a uma lista de contra-cheques
type FolhaDePagamento_CSV struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContraCheque []*ContraCheque_CSV `protobuf:"bytes,1,rep,name=contra_cheque,json=contraCheque,proto3" json:"contra_cheque,omitempty"`
}

func (x *FolhaDePagamento_CSV) Reset() {
	*x = FolhaDePagamento_CSV{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pacote_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FolhaDePagamento_CSV) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FolhaDePagamento_CSV) ProtoMessage() {}

func (x *FolhaDePagamento_CSV) ProtoReflect() protoreflect.Message {
	mi := &file_pacote_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FolhaDePagamento_CSV.ProtoReflect.Descriptor instead.
func (*FolhaDePagamento_CSV) Descriptor() ([]byte, []int) {
	return file_pacote_proto_rawDescGZIP(), []int{2}
}

func (x *FolhaDePagamento_CSV) GetContraCheque() []*ContraCheque_CSV {
	if x != nil {
		return x.ContraCheque
	}
	return nil
}

// Estrutura que faz referência a uma linha de contra-cheque em um órgão-mes-ano
type ContraCheque_CSV struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdContraCheque string                `protobuf:"bytes,1,opt,name=id_contra_cheque,json=idContraCheque,proto3" json:"id_contra_cheque,omitempty"`
	ChaveColeta    string                `protobuf:"bytes,2,opt,name=chave_coleta,json=chaveColeta,proto3" json:"chave_coleta,omitempty"`
	Nome           string                `protobuf:"bytes,3,opt,name=nome,proto3" json:"nome,omitempty"`
	Matricula      string                `protobuf:"bytes,4,opt,name=matricula,proto3" json:"matricula,omitempty"`
	Funcao         string                `protobuf:"bytes,5,opt,name=funcao,proto3" json:"funcao,omitempty"`
	LocalTrabalho  string                `protobuf:"bytes,6,opt,name=local_trabalho,json=localTrabalho,proto3" json:"local_trabalho,omitempty"`
	Tipo           ContraCheque_CSV_Tipo `protobuf:"varint,7,opt,name=tipo,proto3,enum=ContraCheque_CSV_Tipo" json:"tipo,omitempty"`
	Ativo          bool                  `protobuf:"varint,8,opt,name=ativo,proto3" json:"ativo,omitempty"`
}

func (x *ContraCheque_CSV) Reset() {
	*x = ContraCheque_CSV{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pacote_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContraCheque_CSV) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContraCheque_CSV) ProtoMessage() {}

func (x *ContraCheque_CSV) ProtoReflect() protoreflect.Message {
	mi := &file_pacote_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContraCheque_CSV.ProtoReflect.Descriptor instead.
func (*ContraCheque_CSV) Descriptor() ([]byte, []int) {
	return file_pacote_proto_rawDescGZIP(), []int{3}
}

func (x *ContraCheque_CSV) GetIdContraCheque() string {
	if x != nil {
		return x.IdContraCheque
	}
	return ""
}

func (x *ContraCheque_CSV) GetChaveColeta() string {
	if x != nil {
		return x.ChaveColeta
	}
	return ""
}

func (x *ContraCheque_CSV) GetNome() string {
	if x != nil {
		return x.Nome
	}
	return ""
}

func (x *ContraCheque_CSV) GetMatricula() string {
	if x != nil {
		return x.Matricula
	}
	return ""
}

func (x *ContraCheque_CSV) GetFuncao() string {
	if x != nil {
		return x.Funcao
	}
	return ""
}

func (x *ContraCheque_CSV) GetLocalTrabalho() string {
	if x != nil {
		return x.LocalTrabalho
	}
	return ""
}

func (x *ContraCheque_CSV) GetTipo() ContraCheque_CSV_Tipo {
	if x != nil {
		return x.Tipo
	}
	return ContraCheque_CSV_MEMBRO
}

func (x *ContraCheque_CSV) GetAtivo() bool {
	if x != nil {
		return x.Ativo
	}
	return false
}

// Estrutura que faz referência a uma lista de Remunerações
type Remuneracoes_CSV struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Remuneracao []*Remuneracao_CSV `protobuf:"bytes,1,rep,name=remuneracao,proto3" json:"remuneracao,omitempty"`
}

func (x *Remuneracoes_CSV) Reset() {
	*x = Remuneracoes_CSV{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pacote_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Remuneracoes_CSV) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Remuneracoes_CSV) ProtoMessage() {}

func (x *Remuneracoes_CSV) ProtoReflect() protoreflect.Message {
	mi := &file_pacote_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Remuneracoes_CSV.ProtoReflect.Descriptor instead.
func (*Remuneracoes_CSV) Descriptor() ([]byte, []int) {
	return file_pacote_proto_rawDescGZIP(), []int{4}
}

func (x *Remuneracoes_CSV) GetRemuneracao() []*Remuneracao_CSV {
	if x != nil {
		return x.Remuneracao
	}
	return nil
}

// Estrutura que faz referência a uma linha de remuneração em um órgão-mes-ano
type Remuneracao_CSV struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdContraCheque string                   `protobuf:"bytes,1,opt,name=id_contra_cheque,json=idContraCheque,proto3" json:"id_contra_cheque,omitempty"`
	ChaveColeta    string                   `protobuf:"bytes,2,opt,name=chave_coleta,json=chaveColeta,proto3" json:"chave_coleta,omitempty"`
	Natureza       Remuneracao_CSV_Natureza `protobuf:"varint,3,opt,name=natureza,proto3,enum=Remuneracao_CSV_Natureza" json:"natureza,omitempty"`
	Categoria      string                   `protobuf:"bytes,4,opt,name=categoria,proto3" json:"categoria,omitempty"`
	Item           string                   `protobuf:"bytes,5,opt,name=item,proto3" json:"item,omitempty"`
	Valor          float64                  `protobuf:"fixed64,6,opt,name=valor,proto3" json:"valor,omitempty"`
}

func (x *Remuneracao_CSV) Reset() {
	*x = Remuneracao_CSV{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pacote_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Remuneracao_CSV) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Remuneracao_CSV) ProtoMessage() {}

func (x *Remuneracao_CSV) ProtoReflect() protoreflect.Message {
	mi := &file_pacote_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Remuneracao_CSV.ProtoReflect.Descriptor instead.
func (*Remuneracao_CSV) Descriptor() ([]byte, []int) {
	return file_pacote_proto_rawDescGZIP(), []int{5}
}

func (x *Remuneracao_CSV) GetIdContraCheque() string {
	if x != nil {
		return x.IdContraCheque
	}
	return ""
}

func (x *Remuneracao_CSV) GetChaveColeta() string {
	if x != nil {
		return x.ChaveColeta
	}
	return ""
}

func (x *Remuneracao_CSV) GetNatureza() Remuneracao_CSV_Natureza {
	if x != nil {
		return x.Natureza
	}
	return Remuneracao_CSV_R
}

func (x *Remuneracao_CSV) GetCategoria() string {
	if x != nil {
		return x.Categoria
	}
	return ""
}

func (x *Remuneracao_CSV) GetItem() string {
	if x != nil {
		return x.Item
	}
	return ""
}

func (x *Remuneracao_CSV) GetValor() float64 {
	if x != nil {
		return x.Valor
	}
	return 0
}

var File_pacote_proto protoreflect.FileDescriptor

var file_pacote_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6f, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x9e, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x61, 0x64, 0x6f, 0x43, 0x6f, 0x6c,
	0x65, 0x74, 0x61, 0x5f, 0x43, 0x53, 0x56, 0x12, 0x23, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x65, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x43, 0x6f, 0x6c, 0x65, 0x74, 0x61,
	0x5f, 0x43, 0x53, 0x56, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x65, 0x74, 0x61, 0x12, 0x35, 0x0a, 0x0c,
	0x72, 0x65, 0x6d, 0x75, 0x6e, 0x65, 0x72, 0x61, 0x63, 0x6f, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x52, 0x65, 0x6d, 0x75, 0x6e, 0x65, 0x72, 0x61, 0x63, 0x6f, 0x65,
	0x73, 0x5f, 0x43, 0x53, 0x56, 0x52, 0x0c, 0x72, 0x65, 0x6d, 0x75, 0x6e, 0x65, 0x72, 0x61, 0x63,
	0x6f, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x05, 0x66, 0x6f, 0x6c, 0x68, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x46, 0x6f, 0x6c, 0x68, 0x61, 0x44, 0x65, 0x50, 0x61, 0x67, 0x61,
	0x6d, 0x65, 0x6e, 0x74, 0x6f, 0x5f, 0x43, 0x53, 0x56, 0x52, 0x05, 0x66, 0x6f, 0x6c, 0x68, 0x61,
	0x22, 0xa9, 0x02, 0x0a, 0x0a, 0x43, 0x6f, 0x6c, 0x65, 0x74, 0x61, 0x5f, 0x43, 0x53, 0x56, 0x12,
	0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x65, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x76, 0x65, 0x43, 0x6f, 0x6c, 0x65,
	0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x61, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x61, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6d, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x6e,
	0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x6e, 0x6f, 0x12, 0x45, 0x0a, 0x10,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x63, 0x6f, 0x6c, 0x65, 0x74, 0x61,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x43, 0x6f, 0x6c,
	0x65, 0x74, 0x61, 0x12, 0x2f, 0x0a, 0x13, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x69, 0x6f, 0x5f, 0x63, 0x6f, 0x6c, 0x65, 0x74, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6f, 0x43, 0x6f, 0x6c,
	0x65, 0x74, 0x6f, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6f, 0x5f, 0x63,
	0x6f, 0x6c, 0x65, 0x74, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x6f, 0x43, 0x6f, 0x6c, 0x65, 0x74, 0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x64,
	0x69, 0x72, 0x5f, 0x63, 0x6f, 0x6c, 0x65, 0x74, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x64, 0x69, 0x72, 0x43, 0x6f, 0x6c, 0x65, 0x74, 0x6f, 0x72, 0x22, 0x4e, 0x0a, 0x14,
	0x46, 0x6f, 0x6c, 0x68, 0x61, 0x44, 0x65, 0x50, 0x61, 0x67, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x6f,
	0x5f, 0x43, 0x53, 0x56, 0x12, 0x36, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x5f, 0x63,
	0x68, 0x65, 0x71, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x43, 0x68, 0x65, 0x71, 0x75, 0x65, 0x5f, 0x43, 0x53, 0x56, 0x52, 0x0c,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x43, 0x68, 0x65, 0x71, 0x75, 0x65, 0x22, 0xb4, 0x02, 0x0a,
	0x10, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x43, 0x68, 0x65, 0x71, 0x75, 0x65, 0x5f, 0x43, 0x53,
	0x56, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x5f, 0x63,
	0x68, 0x65, 0x71, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x64, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x43, 0x68, 0x65, 0x71, 0x75, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x68, 0x61, 0x76, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x76, 0x65, 0x43, 0x6f, 0x6c, 0x65, 0x74, 0x61, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x6f, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x74, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x61, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x61,
	0x12, 0x16, 0x0a, 0x06, 0x66, 0x75, 0x6e, 0x63, 0x61, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x66, 0x75, 0x6e, 0x63, 0x61, 0x6f, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x5f, 0x74, 0x72, 0x61, 0x62, 0x61, 0x6c, 0x68, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x62, 0x61, 0x6c, 0x68, 0x6f, 0x12,
	0x2a, 0x0a, 0x04, 0x74, 0x69, 0x70, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x43, 0x68, 0x65, 0x71, 0x75, 0x65, 0x5f, 0x43, 0x53, 0x56,
	0x2e, 0x54, 0x69, 0x70, 0x6f, 0x52, 0x04, 0x74, 0x69, 0x70, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x61,
	0x74, 0x69, 0x76, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x61, 0x74, 0x69, 0x76,
	0x6f, 0x22, 0x20, 0x0a, 0x04, 0x54, 0x69, 0x70, 0x6f, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x45, 0x4d,
	0x42, 0x52, 0x4f, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x45, 0x52, 0x56, 0x49, 0x44, 0x4f,
	0x52, 0x10, 0x01, 0x22, 0x46, 0x0a, 0x10, 0x52, 0x65, 0x6d, 0x75, 0x6e, 0x65, 0x72, 0x61, 0x63,
	0x6f, 0x65, 0x73, 0x5f, 0x43, 0x53, 0x56, 0x12, 0x32, 0x0a, 0x0b, 0x72, 0x65, 0x6d, 0x75, 0x6e,
	0x65, 0x72, 0x61, 0x63, 0x61, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x52,
	0x65, 0x6d, 0x75, 0x6e, 0x65, 0x72, 0x61, 0x63, 0x61, 0x6f, 0x5f, 0x43, 0x53, 0x56, 0x52, 0x0b,
	0x72, 0x65, 0x6d, 0x75, 0x6e, 0x65, 0x72, 0x61, 0x63, 0x61, 0x6f, 0x22, 0xf7, 0x01, 0x0a, 0x0f,
	0x52, 0x65, 0x6d, 0x75, 0x6e, 0x65, 0x72, 0x61, 0x63, 0x61, 0x6f, 0x5f, 0x43, 0x53, 0x56, 0x12,
	0x28, 0x0a, 0x10, 0x69, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x5f, 0x63, 0x68, 0x65,
	0x71, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x64, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x43, 0x68, 0x65, 0x71, 0x75, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61,
	0x76, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x68, 0x61, 0x76, 0x65, 0x43, 0x6f, 0x6c, 0x65, 0x74, 0x61, 0x12, 0x35, 0x0a, 0x08,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x7a, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19,
	0x2e, 0x52, 0x65, 0x6d, 0x75, 0x6e, 0x65, 0x72, 0x61, 0x63, 0x61, 0x6f, 0x5f, 0x43, 0x53, 0x56,
	0x2e, 0x4e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x7a, 0x61, 0x52, 0x08, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x7a, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x61,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69,
	0x61, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x6f, 0x72, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x6f, 0x72, 0x22, 0x18, 0x0a, 0x08, 0x4e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x7a, 0x61, 0x12, 0x05, 0x0a, 0x01, 0x52, 0x10, 0x00, 0x12, 0x05,
	0x0a, 0x01, 0x44, 0x10, 0x01, 0x42, 0x25, 0x5a, 0x23, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x61, 0x64, 0x6f, 0x73, 0x6a, 0x75, 0x73, 0x62, 0x72, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x73, 0x76, 0x3b, 0x63, 0x73, 0x76, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pacote_proto_rawDescOnce sync.Once
	file_pacote_proto_rawDescData = file_pacote_proto_rawDesc
)

func file_pacote_proto_rawDescGZIP() []byte {
	file_pacote_proto_rawDescOnce.Do(func() {
		file_pacote_proto_rawDescData = protoimpl.X.CompressGZIP(file_pacote_proto_rawDescData)
	})
	return file_pacote_proto_rawDescData
}

var file_pacote_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_pacote_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_pacote_proto_goTypes = []interface{}{
	(ContraCheque_CSV_Tipo)(0),    // 0: ContraCheque_CSV.Tipo
	(Remuneracao_CSV_Natureza)(0), // 1: Remuneracao_CSV.Natureza
	(*ResultadoColeta_CSV)(nil),   // 2: ResultadoColeta_CSV
	(*Coleta_CSV)(nil),            // 3: Coleta_CSV
	(*FolhaDePagamento_CSV)(nil),  // 4: FolhaDePagamento_CSV
	(*ContraCheque_CSV)(nil),      // 5: ContraCheque_CSV
	(*Remuneracoes_CSV)(nil),      // 6: Remuneracoes_CSV
	(*Remuneracao_CSV)(nil),       // 7: Remuneracao_CSV
	(*timestamppb.Timestamp)(nil), // 8: google.protobuf.Timestamp
}
var file_pacote_proto_depIdxs = []int32{
	3, // 0: ResultadoColeta_CSV.coleta:type_name -> Coleta_CSV
	6, // 1: ResultadoColeta_CSV.remuneracoes:type_name -> Remuneracoes_CSV
	4, // 2: ResultadoColeta_CSV.folha:type_name -> FolhaDePagamento_CSV
	8, // 3: Coleta_CSV.timestamp_coleta:type_name -> google.protobuf.Timestamp
	5, // 4: FolhaDePagamento_CSV.contra_cheque:type_name -> ContraCheque_CSV
	0, // 5: ContraCheque_CSV.tipo:type_name -> ContraCheque_CSV.Tipo
	7, // 6: Remuneracoes_CSV.remuneracao:type_name -> Remuneracao_CSV
	1, // 7: Remuneracao_CSV.natureza:type_name -> Remuneracao_CSV.Natureza
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_pacote_proto_init() }
func file_pacote_proto_init() {
	if File_pacote_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pacote_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultadoColeta_CSV); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pacote_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Coleta_CSV); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pacote_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FolhaDePagamento_CSV); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pacote_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContraCheque_CSV); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pacote_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Remuneracoes_CSV); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pacote_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Remuneracao_CSV); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pacote_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pacote_proto_goTypes,
		DependencyIndexes: file_pacote_proto_depIdxs,
		EnumInfos:         file_pacote_proto_enumTypes,
		MessageInfos:      file_pacote_proto_msgTypes,
	}.Build()
	File_pacote_proto = out.File
	file_pacote_proto_rawDesc = nil
	file_pacote_proto_goTypes = nil
	file_pacote_proto_depIdxs = nil
}
